!function(){"use strict";var e={d:function(t,r){for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}};e.d({},{Mm:function(){return U},YS:function(){return P},T6:function(){return A},vV:function(){return b},ed:function(){return V},eY:function(){return y},X0:function(){return w}});const t=document.querySelector(".profile__edit-link"),r=document.querySelector(".profile__add-link"),n=document.querySelector(".profile__image-button"),s=document.querySelector("#add-card-modal"),o=s.querySelector(".modal__form"),i=document.querySelector("#profile-modal"),a=i.querySelector(".modal__form"),l=document.querySelector("#avatar-modal"),d=l.querySelector(".modal__form"),c=document.querySelector("#card-template").content.firstElementChild,u={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_inactive",inputErrorClass:".modal__input-error_",errorClass:"modal__input_border_red"};class h{constructor(e,t){this._validationConfig=e,this._formElement=t,this._buttonElement=this._formElement.querySelector(this._validationConfig.submitButtonSelector)}_showInputError(e,t){const r=this._formElement.querySelector(this._validationConfig.inputErrorClass+e.id);e.classList.add(this._validationConfig.errorClass),r.textContent=t}_hideInputError(e){const t=this._formElement.querySelector(this._validationConfig.inputErrorClass+e.id);e.classList.remove(this._validationConfig.errorClass),t.textContent=""}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_toggleButtonState(e,t){this._hasInvalidInput(e)?this.disableStateButton():(t.classList.remove(this._validationConfig.inactiveButtonClass),t.removeAttribute("disabled"))}_setEventListeners(){const e=Array.from(this._formElement.querySelectorAll(this._validationConfig.inputSelector));this._toggleButtonState(e,this._buttonElement),e.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this._toggleButtonState(e,this._buttonElement)}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}disableStateButton(){this._buttonElement.setAttribute("disabled",!0),this._buttonElement.classList.add(this._validationConfig.inactiveButtonClass)}}class _{constructor(e,t,r,n,s){this._data=e,this._cardElement=t.cloneNode(!0),this._handleImageClick=r,this._deleteCardCallback=n,this._likeButtonCallback=s}_setEventListeners(){this._cardElement.querySelector(".card__link").addEventListener("click",(()=>{this._handleLikeButton()})),this._cardElement.querySelector(".card__delete-btn").addEventListener("click",(()=>{this._deleteCardCallback(this)})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick(this._data)}))}_handleLikeButton(){this._likeButtonCallback(this)}deleteCard(){this._cardElement.remove()}getId(){return this._data._id}getIsLiked(){return this._data.isLiked}addLike(){this._cardElement.querySelector(".card__love-icon").classList.add("card__love-icon_background_black"),this._data.isLiked=!0}deleteLike(){this._cardElement.querySelector(".card__love-icon").classList.remove("card__love-icon_background_black"),this._data.isLiked=!1}likeButtonPersistenceUponReload(){this._data.isLiked?this._cardElement.querySelector(".card__love-icon").classList.add("card__love-icon_background_black"):this._cardElement.querySelector(".card__love-icon").classList.remove("card__love-icon_background_black")}returnCardElement(){return this._cardElement.querySelector(".card__image").src=this._data.link,this._cardElement.querySelector(".card__title").textContent=this._data.name,this._cardElement.querySelector(".card__image").alt=this._data.name,this._setEventListeners(),this._cardElement}}class m{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};_handleRemoteClick(e){e.target===e.currentTarget&&this.close()}setEventListeners(){this._popupElement.querySelector(".modal__close-button-container").addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("mousedown",(e=>{this._handleRemoteClick(e)}))}}class p extends m{constructor(e){let{popupSelector:t,handleFormSubmit:r}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupElement.querySelectorAll(".modal__input"),this._handleFormSubmit=r}close(){this._popupForm.reset(),super.close()}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.id]=e.value})),this._formValues}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.id]}))}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}}class f extends m{constructor(e){let{popupSelector:t,handleYesButton:r}=e;super({popupSelector:t}),this._handleYesButton=r,this._popupButton=this._popupElement.querySelector(".modal__button")}open(e){super.open(),this._handleYesButton=e}setEventListeners(){super.setEventListeners(),this._popupButton.addEventListener("click",(e=>{e.preventDefault(),this._handleYesButton()}))}}function v(e){b.open(e)}function E(e){return new h(u,e)}function S(e,t){return new p({popupSelector:e,handleFormSubmit:t})}function k(e){return new _(e,c,v,A,V)}const b=new class extends m{open(e){this._popupElement.querySelector(".modal__image").src=e.link,this._popupElement.querySelector(".modal__image").alt=e.link,this._popupElement.querySelector(".modal__caption").textContent=e.name,super.open()}}({popupSelector:"#card-modal"}),y=new class{constructor(e){let{nameSelector:t,jobSelector:r,avatarSelector:n}=e;this._userName=document.querySelector(t),this._userJob=document.querySelector(r),this._avatar=document.querySelector(n)}getUserInfo(){return this._userInfo={},this._userInfo.name=this._userName.textContent,this._userInfo.about=this._userJob.textContent,this._userInfo.avatar=this._avatar.src,this._userInfo}setUserInfo(e){this._userName.textContent=e.name,this._userJob.textContent=e.about,this._avatar.src=e.avatar}renderAvatar(e){this._avatar.src=e.avatar}}({nameSelector:".profile__name",jobSelector:".profile__description",avatarSelector:".profile__image"}),L=E(a),C=E(o),g=E(d),I=new class{constructor(e,t){let{items:r,renderer:n}=e;this._initialArray=r,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._initialArray.forEach((e=>{this._renderer(e)}))}appendItem(e){this._container.append(e)}prependItem(e){this._container.prepend(e)}setItemsAndRenderer(e,t){this._initialArray=e,this._renderer=t}}({items:"",renderer:()=>{}},".elements"),q=(e,t)=>{t.querySelector(".modal__button").textContent=e?"Saving...":"Save"},B=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}loadUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponse)}loadCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}editProfile(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponse)}addNewCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}addLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}deleteLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}updateProfilePicture(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{"Content-Type":"application/json",authorization:"20315743-2e79-4356-b56c-474d72a93e6c"}});Promise.all([B.loadUserInfo(),B.loadCards()]).then((e=>{(e=>{y.setUserInfo(e)})(e[0]),(e=>{I.setItemsAndRenderer(e,(e=>{const t=k(e);t.likeButtonPersistenceUponReload(),I.appendItem(t.returnCardElement())})),I.renderItems()})(e[1])})).catch((e=>console.log(e)));const U=S("#add-card-modal",(e=>{q(!0,s),B.addNewCard(e).then((e=>{(e=>{const t=k({name:e.name,link:e.link,_id:e._id}).returnCardElement();I.prependItem(t),C.disableStateButton()})(e),U.close()})).catch((e=>console.log(e))).finally((()=>{q(!1,s)}))})),w=S("#profile-modal",(e=>{q(!0,i),B.editProfile(e,i,w).then((e=>{(e=>{y.setUserInfo(e)})(e),w.close()})).catch((e=>console.log(e))).finally((()=>{q(!1,i)}))})),P=S("#avatar-modal",(e=>{q(!0,l),B.updateProfilePicture(e).then((e=>{y.renderAvatar(e),P.close(),g.disableStateButton()})).catch((e=>console.log(e))).finally((()=>{q(!1,l)}))})),R=new f({popupSelector:"#delete-card-modal",handleYesButton:()=>{}}),A=e=>{R.open((()=>{B.deleteCard(e.getId()).then((()=>{R.close(),e.deleteCard()})).catch((e=>console.log(e)))}))},V=e=>{e.getIsLiked()?B.deleteLike(e.getId()).then((t=>{t.isLiked||e.deleteLike()})).catch((e=>console.log(e))):B.addLike(e.getId()).then((t=>{t.isLiked&&e.addLike()})).catch((e=>console.log(e)))};C.enableValidation(),L.enableValidation(),g.enableValidation(),P.setEventListeners(),U.setEventListeners(),w.setEventListeners(),R.setEventListeners(),b.setEventListeners(),t.addEventListener("click",(function(){w.open(),w.setInputValues(y.getUserInfo())})),r.addEventListener("click",(function(){U.open()})),n.addEventListener("click",(function(){P.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,