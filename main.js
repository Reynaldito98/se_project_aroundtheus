!function(){"use strict";var e={d:function(t,r){for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}};e.d({},{Mm:function(){return C},hi:function(){return S},YS:function(){return I},vV:function(){return b},eY:function(){return y},X0:function(){return q}});const t=document.querySelector(".profile__edit-link"),r=document.querySelector(".profile__add-link"),n=document.querySelector(".profile__image-button"),o=document.querySelector("#add-card-modal").querySelector(".modal__form"),s=document.querySelector("#profile-modal").querySelector(".modal__form"),i=document.querySelector("#avatar-modal").querySelector(".modal__form"),a=document.querySelector("#card-template").content.firstElementChild,l={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_inactive",inputErrorClass:".modal__input-error_",errorClass:"modal__input_border_red"};class d{constructor(e,t){this._validationConfig=e,this._formElement=t,this._buttonElement=this._formElement.querySelector(this._validationConfig.submitButtonSelector)}_showInputError(e,t){const r=this._formElement.querySelector(this._validationConfig.inputErrorClass+e.id);e.classList.add(this._validationConfig.errorClass),r.textContent=t}_hideInputError(e){const t=this._formElement.querySelector(this._validationConfig.inputErrorClass+e.id);e.classList.remove(this._validationConfig.errorClass),t.textContent=""}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_toggleButtonState(e,t){this._hasInvalidInput(e)?this.disableStateButton():(t.classList.remove(this._validationConfig.inactiveButtonClass),t.removeAttribute("disabled"))}_setEventListeners(){const e=Array.from(this._formElement.querySelectorAll(this._validationConfig.inputSelector));this._toggleButtonState(e,this._buttonElement),e.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this._toggleButtonState(e,this._buttonElement)}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}disableStateButton(){this._buttonElement.setAttribute("disabled",!0),this._buttonElement.classList.add(this._validationConfig.inactiveButtonClass)}}class c{constructor(e,t,r){this._data=e,this._cardElement=t.cloneNode(!0),this._handleImageClick=r}_setEventListeners(){this._cardElement.querySelector(".card__link").addEventListener("click",(()=>{this._handleLikeButton()})),this._cardElement.querySelector(".card__delete-btn").addEventListener("click",(()=>{const e=new h({popupSelector:"#delete-card-modal",handleYesButton:()=>{S.deleteCard(this._data._id),this._handleDeleteCard()}});e.open(),e.setEventListeners()})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick(this._data)}))}_handleDeleteCard(){this._cardElement.remove()}_handleLikeButton(){this._data.isLiked?(S.deleteLike(this._data._id,this._cardElement),this._data.isLiked=!1):(S.addLike(this._data._id,this._cardElement),this._data.isLiked=!0)}returnCardElement(){return this._cardElement.querySelector(".card__image").src=this._data.link,this._cardElement.querySelector(".card__title").textContent=this._data.name,this._cardElement.querySelector(".card__image").alt=this._data.name,this._setEventListeners(),this._cardElement}}class u{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};_handleRemoteClick(e){e.target===e.currentTarget&&this.close()}setEventListeners(){this._popupElement.querySelector(".modal__close-button-container").addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("mousedown",(e=>{this._handleRemoteClick(e)}))}}class _ extends u{constructor(e){let{popupSelector:t,handleFormSubmit:r}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupElement.querySelectorAll(".modal__input"),this._handleFormSubmit=r}close(){this._popupForm.reset(),super.close()}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.id]=e.value})),this._formValues}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.id]}))}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()}))}}class h extends u{constructor(e){let{popupSelector:t,handleYesButton:r}=e;super({popupSelector:t}),this._handleYesButton=r,this._popupButton=this._popupElement.querySelector(".modal__button")}setEventListeners(){super.setEventListeners(),this._popupButton.addEventListener("click",(e=>{e.preventDefault(),this._handleYesButton(),this.close()}))}}function m(e){b.open(e)}function p(e){return new d(l,e)}function E(e,t){return new _({popupSelector:e,handleFormSubmit:t})}function f(e){return new c(e,a,m).returnCardElement()}class v{constructor(e,t){let{items:r,renderer:n}=e;this._initialArray=r,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._initialArray.forEach((e=>{this._renderer(e)}))}appendItem(e){this._container.append(e)}prependItem(e){this._container.prepend(e)}}const S=new class{constructor(){this._baseUrl="https://around-api.en.tripleten-services.com/v1",this._headers={authorization:"4c45d989-e1aa-4bb6-a467-6ac9c46f3dac","Content-Type":"application/json"},this._headers1={authorization:"4c45d989-e1aa-4bb6-a467-6ac9c46f3dac"}}loadUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers1}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then((e=>{y.setUserInfo(e),document.querySelector(".profile__image").src=e.avatar,console.log(e)})).catch((e=>{console.error(e)}))}loadCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers1}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then((e=>{const t=new v({items:e,renderer:e=>{const r=f(e);e.isLiked?r.querySelector(".card__love-icon").classList.add("card__love-icon_background_black"):r.querySelector(".card__love-icon").classList.remove("card__love-icon_background_black"),t.appendItem(r)}},".elements");t.renderItems()})).catch((e=>{console.error(e)}))}editProfile(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then((e=>{y.setUserInfo(e)})).catch((e=>{console.error(e)})).finally((()=>{this.renderLoading(!1)}))}addNewCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then((e=>{const t=f({name:e.name,link:e.link,_id:e._id});document.querySelector(".elements").prepend(t),formValidatorCardModal.disableStateButton()})).catch((e=>console.error(e))).finally((()=>{this.renderLoading(!1)}))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers1}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).catch((e=>{console.error(e)}))}addLike(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers1}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then((e=>{e.isLiked&&t.querySelector(".card__love-icon").classList.add("card__love-icon_background_black")})).catch((e=>{console.error(e)}))}deleteLike(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers1}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then((e=>{e.isLiked||t.querySelector(".card__love-icon").classList.remove("card__love-icon_background_black")})).catch((e=>{console.error(e)}))}updateProfilePicture(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))).then((e=>{document.querySelector(".profile__image").src=e.avatar,console.log(e)})).catch((e=>console.error(e))).finally((()=>{this.renderLoading(!1)}))}renderLoading(e){document.querySelector(".modal__button").textContent=e?"Saving...":"Save"}};S.loadUserInfo(),S.loadCards();const b=new class extends u{open(e){this._popupElement.querySelector(".modal__image").src=e.link,this._popupElement.querySelector(".modal__image").alt=e.link,this._popupElement.querySelector(".modal__caption").textContent=e.name,super.open()}}({popupSelector:"#card-modal"}),y=new class{constructor(e){let{nameSelector:t,jobSelector:r}=e;this._userName=document.querySelector(t),this._userJob=document.querySelector(r)}getUserInfo(){return this._userInfo={},this._userInfo.name=this._userName.textContent,this._userInfo.about=this._userJob.textContent,this._userInfo}setUserInfo(e){this._userName.textContent=e.name,this._userJob.textContent=e.about}}({nameSelector:".profile__name",jobSelector:".profile__description"}),L=p(s),k=p(o),g=p(i),C=E("#add-card-modal",(e=>{S.renderLoading(!0),S.addNewCard(e)})),q=E("#profile-modal",(e=>{S.renderLoading(!0),S.editProfile(e)})),I=E("#avatar-modal",(e=>{S.renderLoading(!0),S.updateProfilePicture(e)}));L.enableValidation(),k.enableValidation(),g.enableValidation(),C.setEventListeners(),q.setEventListeners(),I.setEventListeners(),b.setEventListeners(),t.addEventListener("click",(function(){q.open(),q.setInputValues(y.getUserInfo())})),r.addEventListener("click",(function(){C.open()})),n.addEventListener("click",(function(){I.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,